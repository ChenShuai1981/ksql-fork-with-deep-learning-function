[2018-04-17 16:14:40,491] INFO KsqlRestConfig values: 
	metric.reporters = []
	ssl.client.auth = false
	ksql.server.install.dir = /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql
	ksql.server.websockets.num.threads = 5
	response.mediatype.default = application/json
	websocket.path.prefix = /ws
	authentication.realm = 
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	metrics.jmx.prefix = rest-utils
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	ssl.truststore.password = [hidden]
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	query.stream.disconnect.check = 1000
	ssl.protocol = TLS
	debug = false
	listeners = [http://localhost:8088]
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	response.mediatype.preferred = [application/json]
	ssl.cipher.suites = []
	authentication.skip.paths = []
	ssl.truststore.type = JKS
	access.control.allow.methods = 
	access.control.allow.origin = 
	ssl.truststore.location = 
	ksql.server.command.response.timeout.ms = 5000
	ssl.keystore.password = [hidden]
	ssl.keymanager.algorithm = 
	port = 8080
	metrics.sample.window.ms = 30000
	metrics.tag.map = {}
	ksql.server.ui.enabled = true
 (io.confluent.ksql.rest.server.KsqlRestConfig:179)
[2018-04-17 16:14:40,589] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-17 16:14:41,840] WARN Creating topic 1 with replication factor of %d which is less than 2. This is not advisable in a production environment.  (io.confluent.ksql.rest.server.KsqlRestApplication:444)
[2018-04-17 16:14:41,845] INFO Creating topic '_confluent-ksql-default__command_topic' (io.confluent.ksql.util.KafkaTopicClient:90)
[2018-04-17 16:14:42,083] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class io.confluent.ksql.rest.server.computation.CommandId
	json.value.type = class java.lang.Object
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-17 16:14:42,084] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class java.lang.Object
	json.value.type = class io.confluent.ksql.rest.server.computation.Command
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-17 16:14:42,147] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-17 16:14:42,147] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-17 16:14:47,282] INFO Logging initialized @8754ms (org.eclipse.jetty.util.log:186)
[2018-04-17 16:14:47,282] INFO Starting server (io.confluent.ksql.rest.server.KsqlServerMain:41)
[2018-04-17 16:14:47,425] INFO Loading UI-WAR from /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui (io.confluent.ksql.rest.server.KsqlRestApplication:463)
[2018-04-17 16:14:47,557] INFO Adding listener: http://localhost:8088 (io.confluent.rest.Application:194)
[2018-04-17 16:14:47,699] INFO User interface enabled: true (io.confluent.ksql.rest.server.KsqlRestApplication:180)
[2018-04-17 16:14:47,742] ERROR Unable to load ui from /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded. You can disable the ui by setting ksql.server.ui.enabled to false (io.confluent.ksql.rest.server.KsqlRestApplication:186)
java.lang.IllegalArgumentException: file:/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded is not an existing directory.
	at org.eclipse.jetty.util.resource.ResourceCollection.<init>(ResourceCollection.java:88)
	at io.confluent.ksql.rest.server.KsqlRestApplication.getStaticResources(KsqlRestApplication.java:184)
	at io.confluent.rest.Application.createServer(Application.java:277)
	at io.confluent.rest.Application.start(Application.java:549)
	at io.confluent.ksql.rest.server.KsqlRestApplication.start(KsqlRestApplication.java:198)
	at io.confluent.ksql.rest.server.KsqlServerMain.main(KsqlServerMain.java:42)
[2018-04-17 16:14:48,264] INFO jetty-9.2.24.v20180105 (org.eclipse.jetty.server.Server:327)
[2018-04-17 16:14:50,787] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version:27)
[2018-04-17 16:14:51,181] INFO Started o.e.j.s.ServletContextHandler@7a527389{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-17 16:14:51,293] INFO Started o.e.j.s.ServletContextHandler@30f5a68a{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-17 16:14:51,324] INFO Started NetworkTrafficServerConnector@c4ed84{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:266)
[2018-04-17 16:14:51,325] INFO Started @12797ms (org.eclipse.jetty.server.Server:379)
[2018-04-17 16:14:51,331] WARN Writing to metrics Kafka topic will be disabled (io.confluent.support.metrics.PhoneHomeConfig:61)
[2018-04-17 16:14:51,331] ERROR No customer ID configured -- falling back to id 'anonymous' (io.confluent.support.metrics.BaseSupportConfig:342)
[2018-04-17 16:14:51,331] WARN Enforcing customer ID 'anonymous' (io.confluent.support.metrics.PhoneHomeConfig:66)
[2018-04-17 16:14:51,412] WARN Please note that the version check feature of KSQL is enabled.  With this enabled, this instance is configured to collect and report anonymously the version information to Confluent, Inc. ("Confluent") or its parent, subsidiaries, affiliates or service providers every 24hours.  This Metadata may be transferred to any country in which Confluent maintains facilities.  For a more in depth discussion of how Confluent processes such information, please read our Privacy Policy located at http://www.confluent.io/privacy. By proceeding with `confluent.support.metrics.enable=true`, you agree to all such collection, transfer and use of Version information by Confluent. You can turn the version check  feature off by setting `confluent.support.metrics.enable=false` in the KSQL configuration and restarting the KSQL.  See the Confluent Platform documentation for further information. (io.confluent.ksql.version.metrics.KsqlVersionCheckerAgent:69)
[2018-04-17 16:14:51,413] INFO Waiting 10010 ms for the monitored service to finish starting up... (io.confluent.support.metrics.BaseMetricsReporter:206)
[2018-04-17 16:14:51,488] INFO Server up and running (io.confluent.ksql.rest.server.KsqlServerMain:43)
[2018-04-17 16:15:01,423] INFO Monitored service is now ready (io.confluent.support.metrics.BaseMetricsReporter:217)
[2018-04-17 16:15:01,425] INFO Starting metrics collection from monitored component... (io.confluent.support.metrics.BaseMetricsReporter:167)
[2018-04-17 16:15:02,092] ERROR Could not submit metrics to Confluent: version-check.confluent.io: nodename nor servname provided, or not known (io.confluent.support.metrics.utils.WebClient:105)
[2018-04-17 16:15:02,093] ERROR Failed to submit metrics via secure endpoint, falling back to insecure endpoint (io.confluent.support.metrics.submitters.ConfluentSubmitter:138)
[2018-04-17 16:15:02,098] ERROR Could not submit metrics to Confluent: version-check.confluent.io (io.confluent.support.metrics.utils.WebClient:105)
[2018-04-17 16:15:02,099] ERROR Failed to submit metrics to Confluent via insecure endpoint=http://version-check.confluent.io/ksql/anon -- giving up (io.confluent.support.metrics.submitters.ConfluentSubmitter:168)
[2018-04-17 16:17:49,560] INFO 127.0.0.1 - - [17/Apr/2018:16:17:49 +0200] "GET /info HTTP/1.1" 200 116  405 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:18:51,625] INFO 127.0.0.1 - - [17/Apr/2018:16:18:51 +0200] "GET /info HTTP/1.1" 200 116  4 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:19:07,932] INFO 127.0.0.1 - - [17/Apr/2018:16:19:07 +0200] "GET /info HTTP/1.1" 200 116  3 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:19:08,119] INFO 127.0.0.1 - - [17/Apr/2018:16:19:08 +0200] "GET /info HTTP/1.1" 200 116  3 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:19:12,930] INFO 127.0.0.1 - - [17/Apr/2018:16:19:11 +0200] "POST /ksql HTTP/1.1" 200 192  1400 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:19:38,980] INFO Stopped NetworkTrafficServerConnector@c4ed84{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:306)
[2018-04-17 16:19:38,990] INFO Stopped o.e.j.s.ServletContextHandler@30f5a68a{/ws,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-17 16:19:39,020] INFO Stopped o.e.j.s.ServletContextHandler@7a527389{/,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-17 16:19:39,030] INFO Server shutting down (io.confluent.ksql.rest.server.KsqlServerMain:45)
[2018-04-17 16:38:49,635] INFO KsqlRestConfig values: 
	metric.reporters = []
	ssl.client.auth = false
	ksql.server.install.dir = /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql
	ksql.server.websockets.num.threads = 5
	response.mediatype.default = application/json
	websocket.path.prefix = /ws
	authentication.realm = 
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	metrics.jmx.prefix = rest-utils
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	ssl.truststore.password = [hidden]
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	query.stream.disconnect.check = 1000
	ssl.protocol = TLS
	debug = false
	listeners = [http://localhost:8088]
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	response.mediatype.preferred = [application/json]
	ssl.cipher.suites = []
	authentication.skip.paths = []
	ssl.truststore.type = JKS
	access.control.allow.methods = 
	access.control.allow.origin = 
	ssl.truststore.location = 
	ksql.server.command.response.timeout.ms = 5000
	ssl.keystore.password = [hidden]
	ssl.keymanager.algorithm = 
	port = 8080
	metrics.sample.window.ms = 30000
	metrics.tag.map = {}
	ksql.server.ui.enabled = true
 (io.confluent.ksql.rest.server.KsqlRestConfig:179)
[2018-04-17 16:38:49,732] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-17 16:38:51,248] WARN Creating topic 1 with replication factor of %d which is less than 2. This is not advisable in a production environment.  (io.confluent.ksql.rest.server.KsqlRestApplication:444)
[2018-04-17 16:38:51,258] INFO Creating topic '_confluent-ksql-default__command_topic' (io.confluent.ksql.util.KafkaTopicClient:90)
[2018-04-17 16:38:51,474] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class io.confluent.ksql.rest.server.computation.CommandId
	json.value.type = class java.lang.Object
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-17 16:38:51,475] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class java.lang.Object
	json.value.type = class io.confluent.ksql.rest.server.computation.Command
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-17 16:38:51,557] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-17 16:38:51,557] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-17 16:38:56,698] INFO Logging initialized @9274ms (org.eclipse.jetty.util.log:186)
[2018-04-17 16:38:56,699] INFO Starting server (io.confluent.ksql.rest.server.KsqlServerMain:41)
[2018-04-17 16:38:56,851] INFO Loading UI-WAR from /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui (io.confluent.ksql.rest.server.KsqlRestApplication:463)
[2018-04-17 16:38:57,202] INFO Adding listener: http://localhost:8088 (io.confluent.rest.Application:194)
[2018-04-17 16:38:57,344] INFO User interface enabled: true (io.confluent.ksql.rest.server.KsqlRestApplication:180)
[2018-04-17 16:38:57,360] ERROR Unable to load ui from /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded. You can disable the ui by setting ksql.server.ui.enabled to false (io.confluent.ksql.rest.server.KsqlRestApplication:186)
java.lang.IllegalArgumentException: file:/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded is not an existing directory.
	at org.eclipse.jetty.util.resource.ResourceCollection.<init>(ResourceCollection.java:88)
	at io.confluent.ksql.rest.server.KsqlRestApplication.getStaticResources(KsqlRestApplication.java:184)
	at io.confluent.rest.Application.createServer(Application.java:277)
	at io.confluent.rest.Application.start(Application.java:549)
	at io.confluent.ksql.rest.server.KsqlRestApplication.start(KsqlRestApplication.java:198)
	at io.confluent.ksql.rest.server.KsqlServerMain.main(KsqlServerMain.java:42)
[2018-04-17 16:38:57,703] INFO jetty-9.2.24.v20180105 (org.eclipse.jetty.server.Server:327)
[2018-04-17 16:38:58,979] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version:27)
[2018-04-17 16:38:59,254] INFO Started o.e.j.s.ServletContextHandler@7a527389{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-17 16:38:59,330] INFO Started o.e.j.s.ServletContextHandler@30f5a68a{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-17 16:38:59,344] INFO Started NetworkTrafficServerConnector@c4ed84{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:266)
[2018-04-17 16:38:59,345] INFO Started @11922ms (org.eclipse.jetty.server.Server:379)
[2018-04-17 16:38:59,347] WARN Writing to metrics Kafka topic will be disabled (io.confluent.support.metrics.PhoneHomeConfig:61)
[2018-04-17 16:38:59,348] ERROR No customer ID configured -- falling back to id 'anonymous' (io.confluent.support.metrics.BaseSupportConfig:342)
[2018-04-17 16:38:59,349] WARN Enforcing customer ID 'anonymous' (io.confluent.support.metrics.PhoneHomeConfig:66)
[2018-04-17 16:38:59,372] WARN Please note that the version check feature of KSQL is enabled.  With this enabled, this instance is configured to collect and report anonymously the version information to Confluent, Inc. ("Confluent") or its parent, subsidiaries, affiliates or service providers every 24hours.  This Metadata may be transferred to any country in which Confluent maintains facilities.  For a more in depth discussion of how Confluent processes such information, please read our Privacy Policy located at http://www.confluent.io/privacy. By proceeding with `confluent.support.metrics.enable=true`, you agree to all such collection, transfer and use of Version information by Confluent. You can turn the version check  feature off by setting `confluent.support.metrics.enable=false` in the KSQL configuration and restarting the KSQL.  See the Confluent Platform documentation for further information. (io.confluent.ksql.version.metrics.KsqlVersionCheckerAgent:69)
[2018-04-17 16:38:59,372] INFO Waiting 10094 ms for the monitored service to finish starting up... (io.confluent.support.metrics.BaseMetricsReporter:206)
[2018-04-17 16:38:59,389] INFO Server up and running (io.confluent.ksql.rest.server.KsqlServerMain:43)
[2018-04-17 16:39:09,468] INFO Monitored service is now ready (io.confluent.support.metrics.BaseMetricsReporter:217)
[2018-04-17 16:39:09,469] INFO Starting metrics collection from monitored component... (io.confluent.support.metrics.BaseMetricsReporter:167)
[2018-04-17 16:39:10,187] ERROR Could not submit metrics to Confluent: version-check.confluent.io: nodename nor servname provided, or not known (io.confluent.support.metrics.utils.WebClient:105)
[2018-04-17 16:39:10,188] ERROR Failed to submit metrics via secure endpoint, falling back to insecure endpoint (io.confluent.support.metrics.submitters.ConfluentSubmitter:138)
[2018-04-17 16:39:10,190] ERROR Could not submit metrics to Confluent: version-check.confluent.io (io.confluent.support.metrics.utils.WebClient:105)
[2018-04-17 16:39:10,190] ERROR Failed to submit metrics to Confluent via insecure endpoint=http://version-check.confluent.io/ksql/anon -- giving up (io.confluent.support.metrics.submitters.ConfluentSubmitter:168)
[2018-04-17 16:39:15,341] INFO 127.0.0.1 - - [17/Apr/2018:16:39:15 +0200] "GET /info HTTP/1.1" 200 116  271 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:39:15,538] INFO 127.0.0.1 - - [17/Apr/2018:16:39:15 +0200] "GET /info HTTP/1.1" 200 116  4 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:41:09,104] INFO Executing statement: CREATE STREAM healthsensor (eventid integer, sensorinput varchar) WITH (kafka_topic='HealthSensorInputTopic', value_format='DELIMITED'); (io.confluent.ksql.rest.server.computation.CommandRunner:103)
[2018-04-17 16:41:09,133] INFO 127.0.0.1 - - [17/Apr/2018:16:41:08 +0200] "POST /ksql HTTP/1.1" 200 281  524 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:41:16,625] INFO Building AST for select eventid, anomaly(SENSORINPUT) from healthsensor;. (io.confluent.ksql.KsqlEngine:282)
[2018-04-17 16:41:16,739] INFO Build logical plan for select eventid, anomaly(SENSORINPUT) from healthsensor;. (io.confluent.ksql.QueryEngine:99)
[2018-04-17 16:41:16,774] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-17 16:41:17,963] INFO Streaming query 'select eventid, anomaly(SENSORINPUT) from healthsensor;' (io.confluent.ksql.rest.server.resources.streaming.StreamedQueryResource:88)
[2018-04-17 16:41:54,499] WARN Query terminated due to exception:org.eclipse.jetty.io.EofException (io.confluent.ksql.rest.server.resources.streaming.QueryStreamWriter:98)
[2018-04-17 16:41:54,646] WARN Could not clean up the schema registry for query: _confluent-ksql-default_transient_214502006507176052_1523976077639 (io.confluent.ksql.util.QueryMetadata:127)
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:185)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:229)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.getAllSubjects(RestService.java:483)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.getAllSubjects(RestService.java:478)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.getAllSubjects(CachedSchemaRegistryClient.java:323)
	at io.confluent.ksql.util.QueryMetadata.getInternalSubjectNameSet(QueryMetadata.java:121)
	at io.confluent.ksql.util.QueryMetadata.cleanUpInternalTopicAvroSchemas(QueryMetadata.java:134)
	at io.confluent.ksql.rest.server.resources.streaming.QueryStreamWriter.write(QueryStreamWriter.java:117)
	at org.glassfish.jersey.message.internal.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:78)
	at org.glassfish.jersey.message.internal.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:60)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:265)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:250)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:106)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:86)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1130)
	at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:711)
	at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:444)
	at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:434)
	at org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:329)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:315)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:297)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:267)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)
	at org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:408)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:583)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:524)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:461)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:159)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:258)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:748)
[2018-04-17 16:41:54,652] INFO 127.0.0.1 - - [17/Apr/2018:16:41:16 +0200] "POST /query HTTP/1.1" 200 105  38124 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:41:54,753] INFO Build logical plan for . (io.confluent.ksql.QueryEngine:99)
[2018-04-17 16:41:54,756] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-17 16:41:54,978] INFO Executing statement: create stream AnomalyDetectionWithFilter as select rowtime, eventid, CAST (anomaly(sensorinput) AS DOUBLE) as Anomaly from healthsensor where CAST (anomaly(sensorinput) AS DOUBLE) >1.3; (io.confluent.ksql.rest.server.computation.CommandRunner:103)
[2018-04-17 16:41:54,983] INFO Building AST for create stream AnomalyDetectionWithFilter as select rowtime, eventid, CAST (anomaly(sensorinput) AS DOUBLE) as Anomaly from healthsensor where CAST (anomaly(sensorinput) AS DOUBLE) >1.3;. (io.confluent.ksql.KsqlEngine:282)
[2018-04-17 16:41:54,984] INFO Build logical plan for create stream AnomalyDetectionWithFilter as select rowtime, eventid, CAST (anomaly(sensorinput) AS DOUBLE) as Anomaly from healthsensor where CAST (anomaly(sensorinput) AS DOUBLE) >1.3;. (io.confluent.ksql.QueryEngine:99)
[2018-04-17 16:41:54,985] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-17 16:41:55,016] INFO Creating topic 'ANOMALYDETECTIONWITHFILTER' (io.confluent.ksql.util.KafkaTopicClient:90)
[2018-04-17 16:41:55,157] INFO 127.0.0.1 - - [17/Apr/2018:16:41:54 +0200] "POST /ksql HTTP/1.1" 200 356  436 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:42:04,868] INFO Building AST for select rowtime, eventid, anomaly from AnomalyDetectionWithFilter;. (io.confluent.ksql.KsqlEngine:282)
[2018-04-17 16:42:04,873] INFO Build logical plan for select rowtime, eventid, anomaly from AnomalyDetectionWithFilter;. (io.confluent.ksql.QueryEngine:99)
[2018-04-17 16:42:04,874] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-17 16:42:04,952] INFO Streaming query 'select rowtime, eventid, anomaly from AnomalyDetectionWithFilter;' (io.confluent.ksql.rest.server.resources.streaming.StreamedQueryResource:88)
[2018-04-17 16:45:56,967] WARN Query terminated due to exception:org.eclipse.jetty.io.EofException (io.confluent.ksql.rest.server.resources.streaming.QueryStreamWriter:98)
[2018-04-17 16:45:57,070] WARN Could not clean up the schema registry for query: _confluent-ksql-default_transient_7136280924048880421_1523976124881 (io.confluent.ksql.util.QueryMetadata:127)
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:185)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:229)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.getAllSubjects(RestService.java:483)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.getAllSubjects(RestService.java:478)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.getAllSubjects(CachedSchemaRegistryClient.java:323)
	at io.confluent.ksql.util.QueryMetadata.getInternalSubjectNameSet(QueryMetadata.java:121)
	at io.confluent.ksql.util.QueryMetadata.cleanUpInternalTopicAvroSchemas(QueryMetadata.java:134)
	at io.confluent.ksql.rest.server.resources.streaming.QueryStreamWriter.write(QueryStreamWriter.java:117)
	at org.glassfish.jersey.message.internal.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:78)
	at org.glassfish.jersey.message.internal.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:60)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:265)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:250)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:106)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:86)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1130)
	at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:711)
	at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:444)
	at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:434)
	at org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:329)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:315)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:297)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:267)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)
	at org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:408)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:583)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:524)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:461)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:159)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:258)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:748)
[2018-04-17 16:45:57,075] INFO 127.0.0.1 - - [17/Apr/2018:16:42:04 +0200] "POST /query HTTP/1.1" 200 312  232215 (io.confluent.rest-utils.requests:77)
[2018-04-17 16:46:01,623] INFO Stopped NetworkTrafficServerConnector@c4ed84{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:306)
[2018-04-17 16:46:01,626] INFO Stopped o.e.j.s.ServletContextHandler@30f5a68a{/ws,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-17 16:46:01,643] INFO Stopped o.e.j.s.ServletContextHandler@7a527389{/,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-17 16:46:01,645] INFO Server shutting down (io.confluent.ksql.rest.server.KsqlServerMain:45)
[2018-04-18 08:51:35,524] INFO KsqlRestConfig values: 
	metric.reporters = []
	ssl.client.auth = false
	ksql.server.install.dir = /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql
	ksql.server.websockets.num.threads = 5
	response.mediatype.default = application/json
	websocket.path.prefix = /ws
	authentication.realm = 
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	metrics.jmx.prefix = rest-utils
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	ssl.truststore.password = [hidden]
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	query.stream.disconnect.check = 1000
	ssl.protocol = TLS
	debug = false
	listeners = [http://localhost:8088]
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	response.mediatype.preferred = [application/json]
	ssl.cipher.suites = []
	authentication.skip.paths = []
	ssl.truststore.type = JKS
	access.control.allow.methods = 
	access.control.allow.origin = 
	ssl.truststore.location = 
	ksql.server.command.response.timeout.ms = 5000
	ssl.keystore.password = [hidden]
	ssl.keymanager.algorithm = 
	port = 8080
	metrics.sample.window.ms = 30000
	metrics.tag.map = {}
	ksql.server.ui.enabled = true
 (io.confluent.ksql.rest.server.KsqlRestConfig:179)
[2018-04-18 08:51:35,629] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-18 08:51:36,677] WARN Creating topic 1 with replication factor of %d which is less than 2. This is not advisable in a production environment.  (io.confluent.ksql.rest.server.KsqlRestApplication:444)
[2018-04-18 08:51:36,682] INFO Creating topic '_confluent-ksql-default__command_topic' (io.confluent.ksql.util.KafkaTopicClient:90)
[2018-04-18 08:51:36,845] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class io.confluent.ksql.rest.server.computation.CommandId
	json.value.type = class java.lang.Object
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-18 08:51:36,845] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class java.lang.Object
	json.value.type = class io.confluent.ksql.rest.server.computation.Command
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-18 08:51:36,901] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-18 08:51:36,901] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-18 08:51:42,001] INFO Logging initialized @8341ms (org.eclipse.jetty.util.log:186)
[2018-04-18 08:51:42,002] INFO Starting server (io.confluent.ksql.rest.server.KsqlServerMain:41)
[2018-04-18 08:51:42,157] INFO Loading UI-WAR from /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui (io.confluent.ksql.rest.server.KsqlRestApplication:463)
[2018-04-18 08:51:42,174] INFO Expand WAR file '/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/ksql-experimental-ui-0.1.war' (io.confluent.ksql.rest.server.KsqlRestApplication:476)
[2018-04-18 08:51:42,403] INFO Adding listener: http://localhost:8088 (io.confluent.rest.Application:194)
[2018-04-18 08:51:42,529] INFO User interface enabled: true (io.confluent.ksql.rest.server.KsqlRestApplication:180)
[2018-04-18 08:51:42,853] INFO jetty-9.2.24.v20180105 (org.eclipse.jetty.server.Server:327)
[2018-04-18 08:51:44,011] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version:27)
[2018-04-18 08:51:44,300] INFO Started o.e.j.s.ServletContextHandler@2b43529a{/,[file:/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded/],AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-18 08:51:44,360] INFO Started o.e.j.s.ServletContextHandler@4e28bdd1{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-18 08:51:44,374] INFO Started NetworkTrafficServerConnector@241e8ea6{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:266)
[2018-04-18 08:51:44,375] INFO Started @10714ms (org.eclipse.jetty.server.Server:379)
[2018-04-18 08:51:44,378] WARN Writing to metrics Kafka topic will be disabled (io.confluent.support.metrics.PhoneHomeConfig:61)
[2018-04-18 08:51:44,378] ERROR No customer ID configured -- falling back to id 'anonymous' (io.confluent.support.metrics.BaseSupportConfig:342)
[2018-04-18 08:51:44,379] WARN Enforcing customer ID 'anonymous' (io.confluent.support.metrics.PhoneHomeConfig:66)
[2018-04-18 08:51:44,400] WARN Please note that the version check feature of KSQL is enabled.  With this enabled, this instance is configured to collect and report anonymously the version information to Confluent, Inc. ("Confluent") or its parent, subsidiaries, affiliates or service providers every 24hours.  This Metadata may be transferred to any country in which Confluent maintains facilities.  For a more in depth discussion of how Confluent processes such information, please read our Privacy Policy located at http://www.confluent.io/privacy. By proceeding with `confluent.support.metrics.enable=true`, you agree to all such collection, transfer and use of Version information by Confluent. You can turn the version check  feature off by setting `confluent.support.metrics.enable=false` in the KSQL configuration and restarting the KSQL.  See the Confluent Platform documentation for further information. (io.confluent.ksql.version.metrics.KsqlVersionCheckerAgent:69)
[2018-04-18 08:51:44,401] INFO Waiting 10066 ms for the monitored service to finish starting up... (io.confluent.support.metrics.BaseMetricsReporter:206)
[2018-04-18 08:51:44,413] INFO Server up and running (io.confluent.ksql.rest.server.KsqlServerMain:43)
[2018-04-18 08:51:54,473] INFO Monitored service is now ready (io.confluent.support.metrics.BaseMetricsReporter:217)
[2018-04-18 08:51:54,473] INFO Starting metrics collection from monitored component... (io.confluent.support.metrics.BaseMetricsReporter:167)
[2018-04-18 08:51:56,624] INFO Successfully submitted metrics to Confluent via secure endpoint (io.confluent.support.metrics.submitters.ConfluentSubmitter:149)
[2018-04-18 08:54:46,315] INFO Stopped NetworkTrafficServerConnector@241e8ea6{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:306)
[2018-04-18 08:54:46,320] INFO Stopped o.e.j.s.ServletContextHandler@4e28bdd1{/ws,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-18 08:54:46,334] INFO Stopped o.e.j.s.ServletContextHandler@2b43529a{/,[file:/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded/],UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-18 08:54:46,336] INFO Server shutting down (io.confluent.ksql.rest.server.KsqlServerMain:45)
[2018-04-18 08:55:18,680] INFO KsqlRestConfig values: 
	metric.reporters = []
	ssl.client.auth = false
	ksql.server.install.dir = /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql
	ksql.server.websockets.num.threads = 5
	response.mediatype.default = application/json
	websocket.path.prefix = /ws
	authentication.realm = 
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = 
	authentication.method = NONE
	metrics.jmx.prefix = rest-utils
	request.logger.name = io.confluent.rest-utils.requests
	ssl.key.password = [hidden]
	ssl.truststore.password = [hidden]
	authentication.roles = [*]
	metrics.num.samples = 2
	ssl.endpoint.identification.algorithm = 
	compression.enable = false
	query.stream.disconnect.check = 1000
	ssl.protocol = TLS
	debug = false
	listeners = [http://localhost:8088]
	ssl.provider = 
	ssl.enabled.protocols = []
	shutdown.graceful.ms = 1000
	ssl.keystore.location = 
	response.mediatype.preferred = [application/json]
	ssl.cipher.suites = []
	authentication.skip.paths = []
	ssl.truststore.type = JKS
	access.control.allow.methods = 
	access.control.allow.origin = 
	ssl.truststore.location = 
	ksql.server.command.response.timeout.ms = 5000
	ssl.keystore.password = [hidden]
	ssl.keymanager.algorithm = 
	port = 8080
	metrics.sample.window.ms = 30000
	metrics.tag.map = {}
	ksql.server.ui.enabled = true
 (io.confluent.ksql.rest.server.KsqlRestConfig:179)
[2018-04-18 08:55:18,729] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-18 08:55:19,457] INFO Corrected retention.ms on command topic. topic:_confluent-ksql-default__command_topic, retention.ms:9223372036854775807 (io.confluent.ksql.rest.server.KsqlRestApplication:426)
[2018-04-18 08:55:19,531] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class io.confluent.ksql.rest.server.computation.CommandId
	json.value.type = class java.lang.Object
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-18 08:55:19,532] INFO KafkaJsonDeserializerConfig values: 
	json.fail.unknown.properties = true
	json.key.type = class java.lang.Object
	json.value.type = class io.confluent.ksql.rest.server.computation.Command
 (io.confluent.kafka.serializers.KafkaJsonDeserializerConfig:179)
[2018-04-18 08:55:19,568] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-18 08:55:19,568] INFO KafkaJsonSerializerConfig values: 
	json.indent.output = false
 (io.confluent.kafka.serializers.KafkaJsonSerializerConfig:179)
[2018-04-18 08:55:24,640] INFO Logging initialized @6748ms (org.eclipse.jetty.util.log:186)
[2018-04-18 08:55:24,640] INFO Starting server (io.confluent.ksql.rest.server.KsqlServerMain:41)
[2018-04-18 08:55:24,715] INFO Loading UI-WAR from /Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui (io.confluent.ksql.rest.server.KsqlRestApplication:463)
[2018-04-18 08:55:24,721] INFO Expand WAR file '/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/ksql-experimental-ui-0.1.war' (io.confluent.ksql.rest.server.KsqlRestApplication:476)
[2018-04-18 08:55:24,786] INFO Adding listener: http://localhost:8088 (io.confluent.rest.Application:194)
[2018-04-18 08:55:24,843] INFO User interface enabled: true (io.confluent.ksql.rest.server.KsqlRestApplication:180)
[2018-04-18 08:55:24,966] INFO jetty-9.2.24.v20180105 (org.eclipse.jetty.server.Server:327)
[2018-04-18 08:55:25,701] INFO HV000001: Hibernate Validator 5.1.3.Final (org.hibernate.validator.internal.util.Version:27)
[2018-04-18 08:55:25,913] INFO Started o.e.j.s.ServletContextHandler@6cbcf243{/,[file:/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded/],AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-18 08:55:25,969] INFO Started o.e.j.s.ServletContextHandler@4a335fa8{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:744)
[2018-04-18 08:55:25,984] INFO Started NetworkTrafficServerConnector@6492fab5{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:266)
[2018-04-18 08:55:25,986] INFO Started @8094ms (org.eclipse.jetty.server.Server:379)
[2018-04-18 08:55:25,987] WARN Writing to metrics Kafka topic will be disabled (io.confluent.support.metrics.PhoneHomeConfig:61)
[2018-04-18 08:55:25,988] ERROR No customer ID configured -- falling back to id 'anonymous' (io.confluent.support.metrics.BaseSupportConfig:342)
[2018-04-18 08:55:25,988] WARN Enforcing customer ID 'anonymous' (io.confluent.support.metrics.PhoneHomeConfig:66)
[2018-04-18 08:55:26,007] WARN Please note that the version check feature of KSQL is enabled.  With this enabled, this instance is configured to collect and report anonymously the version information to Confluent, Inc. ("Confluent") or its parent, subsidiaries, affiliates or service providers every 24hours.  This Metadata may be transferred to any country in which Confluent maintains facilities.  For a more in depth discussion of how Confluent processes such information, please read our Privacy Policy located at http://www.confluent.io/privacy. By proceeding with `confluent.support.metrics.enable=true`, you agree to all such collection, transfer and use of Version information by Confluent. You can turn the version check  feature off by setting `confluent.support.metrics.enable=false` in the KSQL configuration and restarting the KSQL.  See the Confluent Platform documentation for further information. (io.confluent.ksql.version.metrics.KsqlVersionCheckerAgent:69)
[2018-04-18 08:55:26,008] INFO Waiting 10052 ms for the monitored service to finish starting up... (io.confluent.support.metrics.BaseMetricsReporter:206)
[2018-04-18 08:55:26,018] INFO Server up and running (io.confluent.ksql.rest.server.KsqlServerMain:43)
[2018-04-18 08:55:36,062] INFO Monitored service is now ready (io.confluent.support.metrics.BaseMetricsReporter:217)
[2018-04-18 08:55:36,063] INFO Starting metrics collection from monitored component... (io.confluent.support.metrics.BaseMetricsReporter:167)
[2018-04-18 08:55:36,218] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /index.html HTTP/1.1" 200 0  50 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:36,259] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /static/jsontoyaml.js HTTP/1.1" 200 0  5 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:36,266] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /static/ksql.js HTTP/1.1" 200 0  14 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:36,269] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /static/logo.png?raw=true HTTP/1.1" 200 0  2 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:36,281] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /static/ksql.css HTTP/1.1" 200 0  29 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:36,964] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /info HTTP/1.1" 200 116  285 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:36,966] INFO 127.0.0.1 - - [18/Apr/2018:08:55:36 +0200] "GET /favicon.ico HTTP/1.1" 404 2734  147 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:55:40,605] INFO Successfully submitted metrics to Confluent via secure endpoint (io.confluent.support.metrics.submitters.ConfluentSubmitter:149)
[2018-04-18 08:55:46,465] INFO 127.0.0.1 - - [18/Apr/2018:08:55:46 +0200] "POST /ksql HTTP/1.1" 400 4341  357 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:56:27,345] INFO Executing statement: CREATE STREAM healthsensor (eventid integer, sensorinput varchar) WITH (kafka_topic='HealthSensorInputTopic', value_format='DELIMITED'); (io.confluent.ksql.rest.server.computation.CommandRunner:103)
[2018-04-18 08:56:27,365] INFO 127.0.0.1 - - [18/Apr/2018:08:56:27 +0200] "POST /ksql HTTP/1.1" 200 281  175 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:56:43,857] INFO Build logical plan for . (io.confluent.ksql.QueryEngine:99)
[2018-04-18 08:56:43,883] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-18 08:56:44,604] INFO Executing statement: create stream AnomalyDetection as select rowtime, eventid, CAST (anomaly(sensorinput) AS DOUBLE) as Anomaly from healthsensor; (io.confluent.ksql.rest.server.computation.CommandRunner:103)
[2018-04-18 08:56:44,608] INFO Building AST for create stream AnomalyDetection as select rowtime, eventid, CAST (anomaly(sensorinput) AS DOUBLE) as Anomaly from healthsensor;. (io.confluent.ksql.KsqlEngine:282)
[2018-04-18 08:56:44,608] INFO Build logical plan for create stream AnomalyDetection as select rowtime, eventid, CAST (anomaly(sensorinput) AS DOUBLE) as Anomaly from healthsensor;. (io.confluent.ksql.QueryEngine:99)
[2018-04-18 08:56:44,609] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-18 08:56:44,620] INFO Creating topic 'ANOMALYDETECTION' (io.confluent.ksql.util.KafkaTopicClient:90)
[2018-04-18 08:56:44,798] INFO 127.0.0.1 - - [18/Apr/2018:08:56:43 +0200] "POST /ksql HTTP/1.1" 200 287  1037 (io.confluent.rest-utils.requests:77)
[2018-04-18 08:57:35,322] INFO Building AST for select eventid, anomaly(SENSORINPUT) from healthsensor;. (io.confluent.ksql.KsqlEngine:282)
[2018-04-18 08:57:35,324] INFO Build logical plan for select eventid, anomaly(SENSORINPUT) from healthsensor;. (io.confluent.ksql.QueryEngine:99)
[2018-04-18 08:57:35,325] INFO KsqlConfig values: 
	ksql.persistent.prefix = query_
	ksql.schema.registry.url = http://localhost:8081
	ksql.service.id = default_
	ksql.sink.partitions = 4
	ksql.sink.replicas = 1
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.statestore.suffix = _ksql_statestore
	ksql.timestamp.column.index = null
	ksql.transient.prefix = transient_
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:279)
[2018-04-18 08:57:35,419] INFO Streaming query 'select eventid, anomaly(SENSORINPUT) from healthsensor;  
' (io.confluent.ksql.rest.server.resources.streaming.StreamedQueryResource:88)
[2018-04-18 09:05:43,330] WARN Query terminated due to exception:org.eclipse.jetty.io.EofException (io.confluent.ksql.rest.server.resources.streaming.QueryStreamWriter:98)
[2018-04-18 09:05:43,495] WARN Could not clean up the schema registry for query: _confluent-ksql-default_transient_2007402186764227953_1524034655343 (io.confluent.ksql.util.QueryMetadata:127)
java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1564)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:185)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:229)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.getAllSubjects(RestService.java:483)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.getAllSubjects(RestService.java:478)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.getAllSubjects(CachedSchemaRegistryClient.java:323)
	at io.confluent.ksql.util.QueryMetadata.getInternalSubjectNameSet(QueryMetadata.java:121)
	at io.confluent.ksql.util.QueryMetadata.cleanUpInternalTopicAvroSchemas(QueryMetadata.java:134)
	at io.confluent.ksql.rest.server.resources.streaming.QueryStreamWriter.write(QueryStreamWriter.java:117)
	at org.glassfish.jersey.message.internal.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:78)
	at org.glassfish.jersey.message.internal.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:60)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:265)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:250)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.server.internal.JsonWithPaddingInterceptor.aroundWriteTo(JsonWithPaddingInterceptor.java:106)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.server.internal.MappableExceptionWrapperInterceptor.aroundWriteTo(MappableExceptionWrapperInterceptor.java:86)
	at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162)
	at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1130)
	at org.glassfish.jersey.server.ServerRuntime$Responder.writeResponse(ServerRuntime.java:711)
	at org.glassfish.jersey.server.ServerRuntime$Responder.processResponse(ServerRuntime.java:444)
	at org.glassfish.jersey.server.ServerRuntime$Responder.process(ServerRuntime.java:434)
	at org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:329)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)
	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:315)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:297)
	at org.glassfish.jersey.internal.Errors.process(Errors.java:267)
	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)
	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)
	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)
	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)
	at org.glassfish.jersey.servlet.ServletContainer.serviceImpl(ServletContainer.java:408)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:583)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:524)
	at org.glassfish.jersey.servlet.ServletContainer.doFilter(ServletContainer.java:461)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:159)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:258)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Thread.java:748)
[2018-04-18 09:05:43,506] INFO 127.0.0.1 - - [18/Apr/2018:08:57:35 +0200] "POST /query HTTP/1.1" 200 624  488199 (io.confluent.rest-utils.requests:77)
[2018-04-18 09:05:45,609] INFO Stopped NetworkTrafficServerConnector@6492fab5{HTTP/1.1}{localhost:8088} (org.eclipse.jetty.server.NetworkTrafficServerConnector:306)
[2018-04-18 09:05:45,613] INFO Stopped o.e.j.s.ServletContextHandler@4a335fa8{/ws,null,UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-18 09:05:45,629] INFO Stopped o.e.j.s.ServletContextHandler@6cbcf243{/,[file:/Users/kai.waehner/git-projects/ksql-kai/ksql-kai-fork-with-ml-udf------from-kai-github/ksql/ui/expanded/],UNAVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler:865)
[2018-04-18 09:05:45,631] INFO Server shutting down (io.confluent.ksql.rest.server.KsqlServerMain:45)
